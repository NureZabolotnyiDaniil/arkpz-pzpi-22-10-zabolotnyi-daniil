Харківський національний університет радіоелектроніки

Кафедра програмної інженерії






Звіт
З Лабораторної роботи № 1.
«Розробка Vision & Scope»
з дисципліни «Аналіз та Рефакторинг коду» 







Виконав:                ст. гр. ПЗПІ 22-10  Заболотний Д.М.		Перевірив:
Дашенков Д. С.






Харків 2024
	Тема: Програмна система для інтелектуального управління вуличним освітленням парків. 

1.	Актуальність та огляд існуючих рішень
1.1 Актуальність проблеми
У більшості парків вуличне освітлення працює в фіксованому режимі, коли ліхтарі вмикаються ввечері та вимикаються вранці, незалежно від присутності або відсутності людей. Такий підхід призводить до перевитрати електроенергії і збільшення витрат на утримання парку. Крім того, відсутність інструментів швидкого виявлення несправностей зумовлює зниження рівня безпеки та зручності відвідувачів. Враховуючи, що муніципальні органи та приватні компанії прагнуть до оптимізації витрат та підвищення комфорту, впровадження інтелектуальної системи управління освітленням стає актуальним рішенням.
1.2 Аналіз аналогічних рішень
На ринку існують комплексні системи, орієнтовані переважно на міське вуличне освітлення, зокрема Philips CityTouch та Streetlight Vision. Вони дозволяють централізовано керувати різними зонами, відстежувати поточні показники та регулювати яскравість у реальному часі. Проте такі рішення часто потребують значних інвестицій і складної інтеграції, а також можуть містити надлишковий функціонал, що не завжди необхідний для парків.
Деякі проєкти пропонують відкриті протоколи обміну даними між IoT-контролерами та серверними модулями, однак їхнє розгортання вимагає спеціальних навичок. Крім того, бракує доступних пропозицій, спеціально розроблених для оптимізації освітлення саме у паркових зонах із фокусом на невеликі відстані між ліхтарями та потребу аналізувати дані про рух людей у локальних локаціях.
1.3 Способи монетизації
Програмна система може надаватися замовникам (муніципалітетам, приватним керуючим компаніям) із застосуванням кількох моделей монетизації. Перший варіант – передплатна модель, коли користувач щомісяця або щороку сплачує фіксовану суму за підтримку та оновлення. Другий – продаж ліцензій з подальшим обслуговуванням за додаткову оплату. Також можливе впровадження моделі оплати за додаткові функції, такі як розширена аналітика, прогнозування навантаження або гнучкіші варіанти інтеграції з хмарними сервісами.

2. Призначення та головні функціональні можливості
Система призначена для забезпечення інтелектуального управління вуличним освітленням у парках із метою зниження енергоспоживання та підвищення комфорту й безпеки. Головними функціональними можливостями є:
– Автоматичне керування освітленням на основі базового рівня яскравості та реагування на рух відвідувачів.
– Моніторинг технічного стану обладнання і формування сповіщень про несправності.
– Зберігання історичних даних та формування статистики, що дає змогу оптимізувати роботу освітлення на основі реальної відвідуваності парку.
– Зручний веб-інтерфейс для адміністрування й аналізу стану освітлення та мобільний додаток для оперативного отримання сповіщень.

3. Опис функцій кожної з частин системи та вимоги до них
3.1 Серверна частина та ІоТ-клієнт
Серверна частина забезпечує збирання, обробку й зберігання даних, а також реалізує бізнес-логіку системи. Вона отримує інформацію від датчиків руху та датчиків струму, зберігає її у базі даних та визначає, коли слід змінювати рівень освітлення. Сервер також відповідає за аналіз несправностей і надсилає сповіщення в разі виявлення аномальних показників струму чи відсутності сигналів від ліхтаря впродовж визначеного проміжку часу.
ІоТ-клієнт (наприклад, на базі ESP32) керує подачею напруги на ліхтарі та регулює яскравість освітлення. Для цього він отримує від сервера налаштування базового рівня напруги і періоду повного освітлення після виявлення руху. Також ІоТ-клієнт зчитує дані з датчика руху, надсилає їх на сервер і в разі потреби відображає статус роботи ліхтаря.
Основні вимоги до серверної частини: стабільна робота 24/7, безпечне зберігання даних, обробка запитів у реальному часі та масштабованість для підтримки зростаючої кількості ліхтарів. Вимоги до ІоТ-клієнта охоплюють енергоефективність, здатність працювати в умовах обмеженої пропускної здатності, а також простоту оновлення прошивки для можливих доробок.
3.2 Веб-клієнт та мобільний клієнт
Веб-клієнт надає інструмент адміністрування й моніторингу системи. За його допомогою можна налаштовувати базовий рівень освітлення, змінювати періоди посиленого освітлення та тривалості після спрацювання датчика руху, а також аналізувати статистику відвідувань, щоб регулювати графіки роботи ліхтарів у різних зонах парку. Веб-інтерфейс відображає поточний стан усіх ліхтарів на інтерактивній карті, показує історію несправностей та загальну статистику системи.
Мобільний клієнт, за потреби, доповнює веб-інтерфейс, надаючи можливість відповідальним особам отримувати критичні сповіщення у реальному часі. Це дозволяє персоналу оперативно реагувати на поломки та вмикати чи вимикати окремі ліхтарі в екстрених ситуаціях. Основними вимогами є зручність користування та швидкість відображення даних, навіть за обмеженої швидкості мережі.

4.	Зацікавлені сторони, строки виконання та технології
4.1 Зацікавлені сторони
Серед головних зацікавлених сторін – муніципалітети, які відповідають за утримання парків у місті та прагнуть зменшити витрати на електроенергію. Приватні компанії, що взяли на себе догляд за парками, також зацікавлені в оптимізації витрат і покращенні безпеки відвідувачів. Окрім того, до зацікавлених сторін належать інтегратори IoT-рішень, які можуть розгортати систему на різних платформах, а також розробники, які забезпечують підтримку, оновлення й розширення функціональності.
4.2 Строки реалізації проєкту
Проєкт може бути розподілений на декілька етапів. Попередній етап планування й уточнення вимог може тривати близько одного місяця. Розробка серверної частини та ІоТ-клієнтів – ще приблизно два-три місяці. Створення та інтеграція веб-клієнта разом із базовою мобільною версією потребують додаткових двох-трьох місяців. Тестування й налагодження проводяться паралельно з розробкою та можуть продовжуватись один-два місяці до моменту запуску. Загальний період реалізації орієнтовно становить шість-вісім місяців, з можливістю подальших оновлень та розширень функціоналу.
4.3 Технології та інструменти
Для створення серверної частини пропонується використання Python з фреймворком FastAPI. База даних PostgreSQL забезпечить надійне зберігання даних з IoT-пристроїв і дозволить ефективно опрацьовувати запити від веб-клієнта й мобільного додатка. ІоТ-клієнти базуватимуться на платформах ESP32 з підключенням датчиків руху, датчиків струму та регуляторів напруги.
Комунікація між ІоТ-контролерами та сервером відбуватиметься за допомогою HTTP або MQTT, залежно від особливостей розгортання та технічних вимог. Для веб-інтерфейсу можуть бути використані сучасні фронтенд-фреймворки (React чи Vue), які забезпечать зручну взаємодію та швидке завантаження сторінок. За потреби мобільний клієнт розробляється з використанням кросплатформових технологій або нативних середовищ (Android/iOS).
Застосування цих інструментів дозволить створити гнучку, масштабовану та надійну систему, яка зменшуватиме витрати на електроенергію, підвищуватиме безпеку, а також забезпечуватиме зручність контролю за станом і роботою освітлення у парках.

	Відео-звіт: https://youtu.be/qjTV-YSckz0

